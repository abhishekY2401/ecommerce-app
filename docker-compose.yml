version: "3.8"

services:
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      - DATABASE_URL=${DATABASE_URL_USER}
      - RABBITMQ_URI=${RABBITMQ_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - user-db
    networks:
      - app-network

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    environment:
      - DATABASE_URL=${DATABASE_URL_PRODUCT}
      - RABBITMQ_URI=${RABBITMQ_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "7000:7000"
    depends_on:
      - product-db
    networks:
      - app-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    environment:
      - DATABASE_URL=${DATABASE_URL_ORDER}
      - RABBITMQ_URI=${RABBITMQ_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "5000:5000"
    depends_on:
      - order-db
    networks:
      - app-network

  user-db:
    image: postgres:13
    container_name: user-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: users_db
    volumes:
      - user-db-data:/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"
    networks:
      - app-network

  product-db:
    image: postgres:13
    container_name: product-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: products_db
    volumes:
      - product-db-data:/var/lib/postgresql/data
    restart: always
    ports:
      - "5433:5432"
    networks:
      - app-network

  order-db:
    image: postgres:13
    container_name: order-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: orders_db
    volumes:
      - order-db-data:/var/lib/postgresql/data
    restart: always
    ports:
      - "5434:5432"
    networks:
      - app-network

volumes:
  user-db-data:
  product-db-data:
  order-db-data:

networks:
  app-network:
